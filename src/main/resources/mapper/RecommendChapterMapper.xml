<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suedar.blog.biz.mapper.RecommendChapterMapper">
  <resultMap id="BaseResultMap" type="com.suedar.blog.api.domain.RecommendChapter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="isDeleted" jdbcType="BIT" property="isDeleted" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="link" jdbcType="VARCHAR" property="link" />
  </resultMap>
  <sql id="Base_Column_List">
    id, created, updated, isDeleted, text, link
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from RecommendChapter
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="pageQuery" parameterType="com.suedar.blog.api.query.RecommendChapterPageQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from RecommendChapter
    where isDeleted = 0
    <if test="text != null and text != '' ">
      text like concat(concat("%", #{text}), "%")
    </if>
    order by created desc
    limit #{offset},#{pageSize}
  </select>
  <select id="countPageQuery" parameterType="com.suedar.blog.api.query.RecommendChapterPageQuery" resultType="java.lang.Integer">
    select
    count(id)
    from RecommendChapter
    where isDeleted = 0
    <if test="text != null and text != '' ">
      text like concat(concat('%', #{text}), '%')
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from RecommendChapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.suedar.blog.api.domain.RecommendChapter">
    insert into RecommendChapter (id, created, updated, 
      isDeleted, text, link)
    values (#{id,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT}, #{text,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.suedar.blog.api.domain.RecommendChapter">
    insert into RecommendChapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="isDeleted != null">
        isDeleted,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="link != null">
        link,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.suedar.blog.api.domain.RecommendChapter">
    update RecommendChapter
    <set>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        isDeleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suedar.blog.api.domain.RecommendChapter">
    update RecommendChapter
    set created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      isDeleted = #{isDeleted,jdbcType=BIT},
      text = #{text,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>